<project name="Apache iBATIS Ibator" default="buildIbator" basedir=".">

  <!-- 
    This is the build file for Ibator.  The default target will generate the
    deployment files and run all the tests.
    
    You can also delete the generated artifacts with:
    
       ant clean
    
    Important: the build requires JDK 5.0 or greater.
    
    Note: to update the version of Ibator, change the 
       version.properties file (the "version" property).
  -->
  
  <property name="src.dir" value="${basedir}/../src" />
  <property name="doc.dir" value="${basedir}/../doc" />
  <property name="html.doc.dir" value="${basedir}/../htmldoc" />
  <property name="deploy.dir" value="${basedir}/deploy" />
  <property name="deploy.files" value="${deploy.dir}/files" />
  <property name="work.dir" value="${basedir}/work" />
  <property name="work.classes" value="${work.dir}/bin" />
  <property name="work.instrumented" value="${work.dir}/instrumented" />
  <property name="work.buildsupport" value="${work.dir}/buildsupport" />
  <property name="work.javadoc" value="${work.dir}/javadoc" />
  <property name="generated.source.dir.java2" value="${work.dir}/test/java2/src" />
  <property name="generated.source.dir.java5" value="${work.dir}/test/java5/src" />
  <property name="generated.bin.dir.java2" value="${work.dir}/test/java2/bin" />
  <property name="generated.bin.dir.java5" value="${work.dir}/test/java5/bin" />
  <property name="ibator.test.bin.dir" value="${work.dir}/test/ibator/bin" />
  <property name="reports.dir" value="${basedir}/reports" />
  <property name="reports.junit" value="${reports.dir}/junit" />
  <property name="reports.emma" value="${reports.dir}/emma" />

  <path id="emma.lib" >
    <pathelement location="../devlib/emma.jar" />
    <pathelement location="../devlib/emma_ant.jar" />
  </path>

  <path id="emma.runtime.path">
    <pathelement location="${work.instrumented}"/>
    <pathelement location="${work.classes}"/>
    <path refid="emma.lib"/>
  </path>
	
  <taskdef resource="emma_ant.properties" classpathref="emma.lib" />

  <target name="clean" unless="${TSTAMP}">
    <tstamp/>
    <delete dir="${work.dir}" />
    <delete dir="${deploy.dir}" />
    <delete dir="${reports.dir}" />
    <delete>
      <fileset dir="${basedir}">
        <include name="*.ec"/>
      </fileset>
    </delete>
  </target>
	
  <target name="build.prepare" depends="clean">
  	<echo message="Using JDK version ${ant.java.version} for compilation." />
  	
    <mkdir dir="${deploy.dir}"/>
    <mkdir dir="${work.dir}"/>
    <mkdir dir="${work.classes}"/>

    <copy todir="${deploy.files}">
      <fileset dir="${doc.dir}">
        <exclude name="**/.svn/**"/>
      </fileset>
    </copy>
    
    <copy todir="${deploy.files}/doc">
      <fileset dir="${html.doc.dir}">
        <exclude name="**/.svn/**"/>
      </fileset>
    </copy>
  	
    <propertyfile file="version.properties" comment="Ibator build version info">
      <entry key="buildNum" default="0" type="int" operation="+" value="1"/>
    </propertyfile>
  </target>
  
  <target name="build.compile" depends="build.prepare">
    <javac srcdir="${src.dir}"
    	destdir="${work.classes}"
    	deprecation="true" 
    	debug="true" 
    	source="1.5"
    	target="1.5"/>
  </target>
	  	
  <target name="build.ibator.jar" depends="build.compile">

    <!-- copy non-compilable resources -->    
    <copy todir="${work.classes}">
      <fileset dir="${src.dir}" >
        <exclude name="**/*.java"/>
        <exclude name="**/.*/**"/>  <!-- exclude any . files (SVN) -->
      </fileset>
    </copy>
    
    <property file="version.properties"/>
    
    <jar destfile="${deploy.files}/ibator.jar" basedir="${work.classes}">
      <manifest>
        <attribute name="Main-Class" value="org.apache.ibatis.ibator.api.IbatorRunner"/>
        <attribute name="Specification-Title" value="Apache iBATIS Ibator"/>
        <attribute name="Specification-Version" value="${version}"/>
        <attribute name="Specification-Vendor" value="The Apache Software Foundation"/>
      </manifest>
    </jar>
  </target>
  
  <target name="build.ibator.javadoc">
    <javadoc destdir="${work.javadoc}" use="true" defaultexcludes="false" verbose="false">
      <packageset dir="${src.dir}">
        <include name="org/apache/ibatis/ibator/**"/>
      </packageset>
    </javadoc>
    
    <zip destfile="${deploy.files}/ibator-javadoc.zip" basedir="${work.javadoc}" />
  </target>
  
  <target name="build.zip.ibator.source">
    <zip destfile="${deploy.files}/ibator-src.zip" basedir="${src.dir}" />
  </target>
  
  <target name="assemble.zipfile" depends="build.ibator.jar, build.ibator.javadoc, build.zip.ibator.source">
    <property file="version.properties"/>
    
    <zip destfile="${deploy.dir}/ibator-${version}-${buildNum}.zip" basedir="${deploy.files}" />
  </target>
  
  <target name="buildIbator" depends="assemble.zipfile, test.report, emma.report" >
    <fail if="testsFailed" message="The tests did not pass"/>
  </target>
  
  <target name="test.compile.ibator" depends="test.prepare">
    <mkdir dir="${ibator.test.bin.dir}"/>

    <javac destdir="${ibator.test.bin.dir}"
    	deprecation="true" 
    	debug="true"
    	source="1.5"
    	target="1.5">
      <src path="${basedir}/../test"/>
      <classpath>
        <pathelement location="${deploy.files}/ibator.jar"/>
      </classpath>
    </javac>
  </target>
  	
  <target name="test.run.ibator" depends="test.compile.ibator">
    <junit printsummary="true" showoutput="true">
      <formatter type="xml"/>
      <batchtest todir="${reports.junit}" fork="yes" haltonerror="no" failureproperty="testsFailed">
        <fileset dir="${ibator.test.bin.dir}">
          <include name="**/*Tests.class"/>
        </fileset>
      </batchtest>
      <classpath>
      	<pathelement location="${ibator.test.bin.dir}"/>
        <path refid="emma.runtime.path"/>
      </classpath>
    </junit>
  </target>
	
  <target name="test.prepare" depends="emma.instrument">
    <mkdir dir="${generated.source.dir.java2}"/>
    <mkdir dir="${generated.source.dir.java5}"/>
    <mkdir dir="${generated.bin.dir.java2}"/>
    <mkdir dir="${generated.bin.dir.java5}"/>
    <mkdir dir="${reports.dir}"/>
    <mkdir dir="${reports.junit}"/>
  	<mkdir dir="${work.buildsupport}"/>
  	
    <!-- compile our build support classes -->
    <javac destdir="${work.buildsupport}"
    	deprecation="true" 
    	debug="true"
    	source="1.5"
    	target="1.5">
      <src path="${basedir}/../buildsupport"/>
      <classpath>
      	<pathelement location="${work.classes}"/>
      </classpath>
    </javac>
	  	
    <!-- note that the class does not exist until the build runs.
    	 Validating Ant editors will complain that the task cannot be
    	 found, but it's not really an error. -->
    <taskdef name="runscript"
             classname="org.apache.ibatis.ibator.build.SqlScriptRunnerTask">
      <classpath>
        <pathelement location="${work.buildsupport}"/>
      	<pathelement location="${work.classes}"/>
      </classpath>
    </taskdef>
  	
    <taskdef name="emmadumper"
             classname="org.apache.ibatis.ibator.build.EmmaDumperTask">
      <classpath>
        <pathelement location="${work.buildsupport}"/>
      </classpath>
    </taskdef>
  	
    <!-- create the test database -->
    <runscript driver="org.hsqldb.jdbcDriver"
      url="jdbc:hsqldb:mem:aname"
      userid="sa"
      password=""
      src="${basedir}/../testJava5/ibatortest/CreateDB.sql"/>
  	
  </target>
	  
  <target name="test.generate.test.code.java2" depends="test.prepare">
  	<echo message="Expect four warnings from ibator (BLOBSONLY, NonExistantTable, FRED, BaseClass)" />
	  	
    <!-- note that the class does not exist until the build runs.
    	 Validating Ant editors will complain that the task cannot be
    	 found, but it's not really an error. -->
    <taskdef name="ibator"
             classname="org.apache.ibatis.ibator.ant.IbatorAntTask"
             classpathref="emma.runtime.path"/>
  	
  	<ibator configfile="${basedir}/../testJava2/ibatortest/java2/ibatorConfig.xml" verbose="true">
  		<propertyset>
  			<propertyref name="generated.source.dir.java2"/>
  		</propertyset>
  	</ibator>

  	<emmadumper fileName="${basedir}/coverage.ec" />
</target>
	  	
  <target name="test.generate.test.code.java5" depends="test.prepare">
    <!-- note that the class does not exist until the build runs.
    	 Validating Ant editors will complain that the task cannot be
    	 found, but it's not really an error. -->
    <taskdef name="ibator"
             classname="org.apache.ibatis.ibator.ant.IbatorAntTask"
             classpathref="emma.runtime.path"/>
    
    <!-- compile the base class so ibator can load it -->
    <javac destdir="${generated.bin.dir.java5}"
    	deprecation="true" 
    	debug="true"
    	source="1.5"
    	target="1.5">
      <src path="${basedir}/../testJava5"/>
      <include name="ibatortest/execute/miscellaneous/BaseClass.java" />
    </javac>
  	
    <echo message="Expect three warnings from ibator (BLOBSONLY, NonExistantTable, FRED)" />
    
    <ibator configfile="${basedir}/../testJava5/ibatortest/ibatorConfig.xml" verbose="true">
      <propertyset>
        <propertyref name="generated.source.dir.java5"/>
        <propertyref name="generated.bin.dir.java5"/>
      </propertyset>
    </ibator>

  	<emmadumper fileName="${basedir}/coverage.ec" />
  </target>
	
  <target name="test.compile.test.code.java2" depends="test.generate.test.code.java2">
    <javac destdir="${generated.bin.dir.java2}"
           deprecation="true" 
           debug="true"
           source="1.4"
           target="1.4">
      <src path="${generated.source.dir.java2}"/>
      <src path="${basedir}/../testJava2"/>
    </javac>

    <!-- copy non-compilable resources -->    
    <copy todir="${generated.bin.dir.java2}">
      <fileset dir="${basedir}/../testJava2" >
        <exclude name="**/*.java"/>
        <exclude name="**/.*/**"/>  <!-- exclude any . files (SVN) -->
      </fileset>
    </copy>
    <copy todir="${generated.bin.dir.java2}">
      <fileset dir="${generated.source.dir.java2}" >
        <exclude name="**/*.java"/>
        <exclude name="**/.*/**"/>  <!-- exclude any . files (SVN) -->
      </fileset>
    </copy>
  </target>
		
  <target name="test.compile.test.code.java5" depends="test.generate.test.code.java5">
    <javac destdir="${generated.bin.dir.java5}"
    	deprecation="true" 
    	debug="true"
    	source="1.5"
    	target="1.5">
      <src path="${generated.source.dir.java5}"/>
      <src path="${basedir}/../testJava5"/>
    </javac>

    <!-- copy non-compilable resources -->    
    <copy todir="${generated.bin.dir.java5}">
      <fileset dir="${basedir}/../testJava5" >
        <exclude name="**/*.java"/>
        <exclude name="**/.*/**"/>  <!-- exclude any . files (SVN) -->
      </fileset>
    </copy>
    <copy todir="${generated.bin.dir.java5}">
      <fileset dir="${generated.source.dir.java5}" >
        <exclude name="**/*.java"/>
        <exclude name="**/.*/**"/>  <!-- exclude any . files (SVN) -->
      </fileset>
    </copy>
  </target>
			
  <target name="test.run.java2" depends="test.compile.test.code.java2">
    <junit printsummary="true" showoutput="true">
      <formatter type="xml"/>
      <batchtest todir="${reports.junit}" fork="yes" haltonerror="no" failureproperty="testsFailed">
        <fileset dir="${generated.bin.dir.java2}">
          <include name="**/*Tests.class"/>
        </fileset>
      </batchtest>
      <classpath>
      	<pathelement location="${generated.bin.dir.java2}"/>
        <pathelement location="${basedir}/../devlib/ibatis-2.3.3.720.jar" />
        <pathelement location="${basedir}/../devlib/hsqldb1.8.0.7.jar" />
        <pathelement location="${basedir}/../devlib/commons-logging-1.1.1.jar" />
        <pathelement location="${basedir}/../devlib/spring-beans-2.5.5.jar" />
        <pathelement location="${basedir}/../devlib/spring-core-2.5.5.jar" />
        <pathelement location="${basedir}/../devlib/spring-jdbc-2.5.5.jar" />
        <pathelement location="${basedir}/../devlib/spring-orm-2.5.5.jar" />
        <pathelement location="${basedir}/../devlib/spring-tx-2.5.5.jar" />
      </classpath>
    </junit>
  </target>
	  
  <target name="test.run.java5" depends="test.compile.test.code.java5">
    <junit printsummary="true" showoutput="true">
      <formatter type="xml"/>
      <batchtest todir="${reports.junit}" fork="yes" haltonerror="no" failureproperty="testsFailed">
        <fileset dir="${generated.bin.dir.java5}">
          <include name="**/*Tests.class"/>
        </fileset>
      </batchtest>
      <classpath>
      	<pathelement location="${generated.bin.dir.java5}"/>
        <pathelement location="${basedir}/../devlib/ibatis-2.3.3.720.jar" />
        <pathelement location="${basedir}/../devlib/hsqldb1.8.0.7.jar" />
        <pathelement location="${basedir}/../devlib/commons-logging-1.1.1.jar" />
        <pathelement location="${basedir}/../devlib/spring-beans-2.5.5.jar" />
        <pathelement location="${basedir}/../devlib/spring-core-2.5.5.jar" />
        <pathelement location="${basedir}/../devlib/spring-jdbc-2.5.5.jar" />
        <pathelement location="${basedir}/../devlib/spring-orm-2.5.5.jar" />
        <pathelement location="${basedir}/../devlib/spring-tx-2.5.5.jar" />
      </classpath>
    </junit>
  </target>
	
  <target name="test.run.no.compile" >
    <junit printsummary="true" showoutput="true">
      <formatter type="xml"/>
      <batchtest todir="${reports.junit}" fork="yes" haltonerror="no" failureproperty="testsFailed">
        <fileset dir="${generated.source.dir.java5}">
          <include name="**/*Tests.class"/>
        </fileset>
      </batchtest>
      <classpath>
      	<pathelement location="${generated.source.dir.java5}"/>
        <pathelement location="${basedir}/../devlib/ibatis-2.3.1.710.jar" />
        <pathelement location="${basedir}/../devlib/hsqldb1.8.0.7.jar" />
      </classpath>
    </junit>

    <junit printsummary="true" showoutput="true">
      <formatter type="xml"/>
      <batchtest todir="${reports.junit}" fork="yes" haltonerror="no" failureproperty="testsFailed">
        <fileset dir="${generated.source.dir.java2}">
          <include name="**/*Tests.class"/>
        </fileset>
      </batchtest>
      <classpath>
      	<pathelement location="${generated.source.dir.java2}"/>
        <pathelement location="${basedir}/../devlib/ibatis-2.3.1.710.jar" />
        <pathelement location="${basedir}/../devlib/hsqldb1.8.0.7.jar" />
      </classpath>
    </junit>
  </target>
	
  <target name="test.report" depends="test.run.java2, test.run.java5, test.run.ibator" >
    <junitreport todir="${reports.junit}">
      <fileset dir="${reports.junit}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${reports.junit}"/>
    </junitreport>
  </target>
	
  <target name="emma.instrument" depends="build.ibator.jar" >
    <mkdir dir="${work.instrumented}"/>
  	
    <path id="emma.classpath">
      <pathelement location="${deploy.files}/ibator.jar" />
    </path>
  	
    <emma>
      <instr instrpathref="emma.classpath"
    	destdir="${work.instrumented}"
    	metadatafile="${basedir}/coverage.ec"
    	merge="true"/>
  	</emma>
  </target>

  <target name="emma.report" depends="test.run.ibator, test.generate.test.code.java2, test.generate.test.code.java5" >
    <mkdir dir="${reports.emma}" />
  	<emma >
      <report sourcepath="${src.dir}" >
        <fileset dir="${basedir}" >
          <include name="*.ec" />
        </fileset>
        <html outfile="${reports.emma}/coverage.html" />
      </report>
    </emma>
  </target>
</project>
