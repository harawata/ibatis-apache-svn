<project name="iBATIS-DBL2" default="all" basedir=".">

  <property file="build.properties"/>

  <path id="runtime.src">
    <pathelement location="${src.rt}"/>
    <pathelement location="${src.compat}"/>
  </path>

  <path id="test.src">
    <pathelement location="${src.dev}"/>
    <pathelement location="${src.test}"/>
  </path>

  <path id="sourcepath">
    <path refid="runtime.src"/>
    <path refid="test.src"/>
  </path>

  <path id="classpath">
    <pathelement location="${work.classes}"/>
    <pathelement location="${work.tests}"/>
    <fileset dir="${lib.rt}" includes="**/*.jar"/>
    <fileset dir="${lib.dev}" includes="**/*.jar"/>
  </path>

  <target name="clean">
    <delete dir="${deploy.path}"/>
    <delete dir="${work.root}"/>
    <delete dir="${reports.root}"/>
    <delete>
      <fileset dir="./">
        <include name="junit*.properties"/>
      </fileset>
    </delete>
    <delete>
      <fileset dir="./">
        <include name="coverage.ec"/>
      </fileset>
    </delete>
    <delete>
      <fileset dir="${src.rt}">
        <include name="**/*.class"/>
      </fileset>
    </delete>
    <delete>
      <fileset dir="${src.compat}">
        <include name="**/*.class"/>
      </fileset>
    </delete>
    <delete>
      <fileset dir="${src.dev}">
        <include name="**/*.class"/>
      </fileset>
    </delete>
    <delete>
      <fileset dir="${src.test}">
        <include name="**/*.class"/>
      </fileset>
    </delete>
  </target>

  <target name="prepare" depends="clean">
    <mkdir dir="${deploy.files}"/>
    <mkdir dir="${work.classes}"/>
    <mkdir dir="${work.tests}"/>
    <mkdir dir="${work.instr}"/>
    <mkdir dir="${work.javadoc.dev}"/>
    <mkdir dir="${work.javadoc.user}"/>
    <mkdir dir="${reports.junit}"/>
    <mkdir dir="${reports.coverage}"/>
    <mkdir dir="${deploy.path}"/>
    <mkdir dir="${deploy.path}/lib/"/>
    <mkdir dir="${deploy.path}/src/"/>
    <mkdir dir="${deploy.path}/doc/"/>
    <!-- Prepare Release Docs -->
    <copy todir="${deploy.path}">
      <fileset dir="${res.txt}">
        <include name="**/*.txt"/>
      </fileset>
    </copy>
    <propertyfile file="version.properties" comment="Build version info">
      <entry key="buildDate" type="date" value="now"/>
      <entry key="buildNum" default="0" type="int" operation="+" value="1"/>
    </propertyfile>
    <property file="version.properties"/>
    <replace
      file="${deploy.path}/release.txt"
      value="value not found in version.properties"
      propertyFile="version.properties">
      <replacefilter
        token="@buildDate@"
        property="buildDate"/>
      <replacefilter
        token="@buildNum@"
        property="buildNum"/>
    </replace>
  </target>

  <target name="src.compile" depends="prepare">
    <javac srcdir="${src.rt}" sourcepathref="sourcepath" classpathref="classpath" destdir="${work.classes}" deprecation="true" debug="true"/>
    <javac srcdir="${src.compat}" sourcepathref="sourcepath" classpathref="classpath" destdir="${work.classes}" deprecation="true" debug="true"/>
    <copy todir="${work.classes}">
      <fileset dir="${src.rt}" >
        <exclude name="**/*.java"/>
      </fileset>
      <fileset dir="${src.compat}" >
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
    <javac srcdir="${src.dev}" sourcepathref="sourcepath" classpathref="classpath" destdir="${work.tests}" deprecation="false" debug="true"/>
    <javac srcdir="${src.test}" sourcepathref="sourcepath" classpathref="classpath" destdir="${work.tests}" deprecation="false" debug="true"/>
    <copy todir="${work.tests}">
      <fileset dir="${src.dev}" >
        <exclude name="**/*.java"/>
      </fileset>
      <fileset dir="${src.test}" >
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
  </target>

  <target name="src.javadoc">
    <javadoc destdir="${work.javadoc.dev}" use="true" defaultexcludes="false" failonerror="true" verbose="false">
      <classpath refid="classpath"/>
      <packageset dir="${src.rt}">
        <include name="com/ibatis/**"/>
      </packageset>
    </javadoc>
    <copy todir="${work.javadoc.dev}" filtering="true" overwrite="true">
      <fileset dir="${res.javadoc}">
        <include name="**/*"/>
      </fileset>
    </copy>
    <move todir="${work.javadoc.dev}" overwrite="false">
      <fileset dir="${work.javadoc.dev}"/>
      <mapper type="glob" from="*xml" to="*txt"/>
    </move>

    <javadoc destdir="${work.javadoc.user}" defaultexcludes="false" failonerror="true" verbose="false">
      <classpath refid="classpath"/>
      <packageset dir="${src.rt}">
        <include name="com/ibatis/*/client/**"/>
        <include name="com/ibatis/common/**"/>
      </packageset>
    </javadoc>
    <copy todir="${work.javadoc.user}" filtering="true" overwrite="true">
      <fileset dir="${res.javadoc}">
        <include name="**/*"/>
      </fileset>
    </copy>
    <move todir="${work.javadoc.user}" overwrite="false">
      <fileset dir="${work.javadoc.user}"/>
      <mapper type="glob" from="*xml" to="*txt"/>
    </move>
  </target>

  <taskdef resource="emma_ant.properties" classpathref="classpath"/>

  <target name="test.instrument" depends="src.compile">
    <emma enabled="${coverage.enabled}">
      <instr instrpathref="classpath"
        destdir="${work.instr}"
        metadatafile="./coverage.ec"
        merge="true"
        >
        <filter includes="com.ibatis.*"/>
        <filter excludes="com.ibatis.db.*"/>
        <filter excludes="com.opensymphony"/>
        <filter excludes="net.*"/>
        <filter excludes="*Test"/>
        <filter excludes="testdomain.*"/>
        <filter excludes="compatibility.*"/>
        <filter excludes="xmltester.*"/>
      </instr>
    </emma>
  </target>

  <target name="test.run" depends="test.instrument">
    <junit printsummary="true" showoutput="true">
      <formatter type="xml"/>
      <batchtest todir="${reports.junit}" fork="yes" haltonerror="no" failureproperty="testsFailed">
        <fileset dir="${work.tests}">
          <include name="**/*Test.class"/>
          <exclude name="**/Base*Test.class"/>
        </fileset>
      </batchtest>
      <classpath path="${work.instr}"/>
      <classpath refid="classpath"/>
    </junit>
  </target>

  <target name="test.report" depends="test.run" >
    <junitreport todir="${reports.junit}">
      <fileset dir="${reports.junit}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${reports.junit}"/>
    </junitreport>
  </target>

  <target name="test.compatibility" depends="test.report">
    <java fork="true" classname="compatibility.RunAllCompat" failonerror="true">
      <classpath path="${work.instr}"/>
      <classpath refid="classpath"/>
    </java>
  </target>

  <target name="test.coverage" depends="test.compatibility" >
    <emma enabled="${coverage.enabled}">
      <report sourcepath="${src.rt}"
        sort="+block,+name,+method,+class"
        metrics="method:70,block:80,line:80,class:100"
        >
        <fileset dir="./">
          <include name="*.ec"/>
        </fileset>
        <html outfile="${reports.coverage}/coverage.html"
          depth="method"
          columns="name,class,method,block,line"
          />
      </report>
    </emma>
  </target>

  <target name="jar.sqlmaps" depends="src.compile">
    <jar jarfile="${deploy.path}/lib/ibatis-sqlmap-2.jar">
      <manifest>
        <attribute name="Built-On" value="${buildDate}"/>
	      <section name="com/ibatis/sqlmap/">
          <attribute name="Implementation-Title" value="iBatis sql map"/>
          <attribute name="Implementation-Version" value="${version} build# ${buildNum}"/>
          <attribute name="Implementation-Vendor" value="Apache Software Foundation"/>
        </section>
      </manifest>
      <fileset dir="${work.classes}">
        <include name="com/ibatis/sqlmap/**/*"/>
      </fileset>
      <fileset dir="${deploy.path}">
        <include name="release.txt"/>
        <include name="license.txt"/>
      </fileset>
    </jar>
  </target>

  <target name="jar.dao" depends="src.compile">
    <jar jarfile="${deploy.path}/lib/ibatis-dao-2.jar">
      <manifest>
        <attribute name="Built-On" value="${buildDate}"/>
	      <section name="com/ibatis/dao/">
          <attribute name="Implementation-Title" value="iBatis dao"/>
          <attribute name="Implementation-Version" value="${version} build# ${buildNum}"/>
          <attribute name="Implementation-Vendor" value="Apache Software Foundation"/>
        </section>
      </manifest>
      <fileset dir="${work.classes}">
        <include name="com/ibatis/dao/**/*"/>
      </fileset>
      <fileset dir="${deploy.path}">
        <include name="release.txt"/>
        <include name="license.txt"/>
      </fileset>
    </jar>
  </target>

  <target name="jar.common" depends="src.compile">
    <jar jarfile="${deploy.path}/lib/ibatis-common-2.jar">
      <manifest>
        <attribute name="Built-On" value="${buildDate}"/>
	      <section name="com/ibatis/common/">
          <attribute name="Implementation-Title" value="iBatis common"/>
          <attribute name="Implementation-Version" value="${version} build# ${buildNum}"/>
          <attribute name="Implementation-Vendor" value="Apache Software Foundation"/>
        </section>
      </manifest>
      <fileset dir="${work.classes}">
        <include name="com/ibatis/common/**/*"/>
      </fileset>
      <fileset dir="${deploy.path}">
        <include name="release.txt"/>
        <include name="license.txt"/>
      </fileset>
    </jar>
  </target>

  <target name="jar.compatibility" depends="src.compile">
    <mkdir dir="${deploy.path}/lib/1-x-Compatibility/"/>
    <jar jarfile="${deploy.path}/lib/1-x-Compatibility/ibatis-sqlmap-1-x.jar">
      <manifest>
        <attribute name="Built-On" value="${buildDate}"/>
	      <section name="com/ibatis/db/">
          <attribute name="Implementation-Title" value="iBatis compatibility"/>
          <attribute name="Implementation-Version" value="${version} build# ${buildNum}"/>
          <attribute name="Implementation-Vendor" value="Apache Software Foundation"/>
        </section>
      </manifest>
      <fileset dir="${work.classes}">
        <include name="com/ibatis/db/**/*"/>
      </fileset>
      <fileset dir="${deploy.path}">
        <include name="release.txt"/>
        <include name="license.txt"/>
      </fileset>
    </jar>
  </target>

  <target name="jar.src" depends="src.compile">
    <jar jarfile="${deploy.path}/src/ibatis-src.zip">
      <fileset dir="${src.rt}"/>
      <fileset dir="${src.compat}"/>
      <fileset dir="${deploy.path}">
        <include name="release.txt"/>
        <include name="license.txt"/>
      </fileset>
    </jar>
  </target>

  <target name="jar.javadoc" depends="src.compile">
    <jar jarfile="${deploy.path}/doc/user-javadoc.zip">
      <fileset dir="${work.javadoc.user}"/>
    </jar>
    <jar jarfile="${deploy.path}/doc/dev-javadoc.zip">
      <fileset dir="${work.javadoc.dev}"/>
    </jar>
  </target>

  <target name="deploy.assemble" depends="jar.sqlmaps,jar.dao,jar.common,jar.compatibility,jar.src, jar.javadoc">
    <copy todir="${deploy.path}/lib">
      <fileset dir="${lib.rt}">
        <include name="**/*.jar"/>
      </fileset>
    </copy>
  </target>

  <target name="deploy.zipfile" depends="deploy.assemble">
    <property file="version.properties"/>
    <jar jarfile="${deploy.files}/${deploy.prefix}${buildNum}${deploy.ext}">
      <fileset dir="${deploy.path}"/>
    </jar>
  </target>

  <target name="all" depends="test.coverage, src.javadoc, deploy.zipfile">
    <fail if="testsFailed" message="The tests did not pass"/>
  </target>

  <!--
  <taskdef  name="convertSqlMaps" classname="com.ibatis.db.sqlmap.upgrade.ConvertTask"  classpathref="classpath"/>
  <target name="convert">
    <convertSqlMaps todir="F:/out/" overwrite="true">
      <fileset dir="${tests}/compatibility/">
        <include name="**/maps/*.xml"/>
      </fileset>
    </convertSqlMaps>
  </target>
  -->

</project>