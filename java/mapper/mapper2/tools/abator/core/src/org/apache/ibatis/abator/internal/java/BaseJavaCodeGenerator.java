/*
 *  Copyright 2005 The Apache Software Foundation
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.apache.ibatis.abator.internal.java;

import java.util.Date;

import org.apache.ibatis.abator.config.FullyQualifiedTable;
import org.apache.ibatis.abator.internal.db.ColumnDefinition;

/**
 * @author Jeff Butler
 */
public abstract class BaseJavaCodeGenerator {

    protected String lineSeparator;
    
    /**
     * 
     */
    public BaseJavaCodeGenerator() {
        super();
        lineSeparator = System.getProperty("line.separator"); //$NON-NLS-1$
        if (lineSeparator == null) {
            lineSeparator = "\n"; //$NON-NLS-1$
        }
    }

    /**
     * Utility method. Adds a newline character to a StringBuffer.
     * 
     * @param sb the StringBuffer to be appended to
     */
    public void newLine(StringBuffer sb) {
        sb.append(lineSeparator);
    }

    /**
     * Utility method that indents the buffer by the default amount (four spaces
     * per indent level).
     * 
     * @param sb a StringBuffer to append to
     * @param indentLevel the required indent level
     */
    public void indent(StringBuffer sb, int indentLevel) {
        for (int i = 0; i < indentLevel; i++) {
            sb.append("    "); //$NON-NLS-1$
        }
    }

	public String getFieldComment(FullyQualifiedTable table, String columnName) {
		StringBuffer comment = new StringBuffer();
		
		indent(comment, 1);
		comment.append("/**"); //$NON-NLS-1$
		newLine(comment);
		indent(comment, 1);
		comment.append(" * This field was generated by Abator for iBATIS.");
		newLine(comment);
		indent(comment, 1);
		comment.append(" * This field corresponds to the database column ");
		comment.append(table.getFullyQualifiedTableName());
		comment.append('.');
		comment.append(columnName);
		newLine(comment);
		indent(comment, 1);
		comment.append(" *"); //$NON-NLS-1$
		newLine(comment);
		indent(comment, 1);
		comment.append(" * @abatorgenerated "); //$NON-NLS-1$
		comment.append(new Date());
		newLine(comment);
		indent(comment, 1);
		comment.append(" */"); //$NON-NLS-1$
		
		return comment.toString();
	}
	
	public String getFieldComment(FullyQualifiedTable table) {
		StringBuffer comment = new StringBuffer();
		
		indent(comment, 1);
		comment.append("/**"); //$NON-NLS-1$
		newLine(comment);
		indent(comment, 1);
		comment.append(" * This field was generated by Abator for iBATIS.");
		newLine(comment);
		indent(comment, 1);
		comment.append(" * This field corresponds to the database table ");
		comment.append(table.getFullyQualifiedTableName());
		newLine(comment);
		indent(comment, 1);
		comment.append(" *"); //$NON-NLS-1$
		newLine(comment);
		indent(comment, 1);
		comment.append(" * @abatorgenerated "); //$NON-NLS-1$
		comment.append(new Date());
		newLine(comment);
		indent(comment, 1);
		comment.append(" */"); //$NON-NLS-1$
		
		return comment.toString();
	}
	
	public String getGetterMethodComment(FullyQualifiedTable table, ColumnDefinition columnDefinition) {
		StringBuffer comment = new StringBuffer();
		
		indent(comment, 1);
		comment.append("/**"); //$NON-NLS-1$
		newLine(comment);
		indent(comment, 1);
		comment.append(" * This method was generated by Abator for iBATIS.");
		newLine(comment);
		indent(comment, 1);
		comment.append(" * This method returns the value of the database column ");
		comment.append(table.getFullyQualifiedTableName());
		comment.append('.');
		comment.append(columnDefinition.getColumnName());
		newLine(comment);
		indent(comment, 1);
		comment.append(" *"); //$NON-NLS-1$
		newLine(comment);
		indent(comment, 1);
		comment.append(" * @return the value of ");
		comment.append(table.getFullyQualifiedTableName());
		comment.append('.');
		comment.append(columnDefinition.getColumnName());
		newLine(comment);
		indent(comment, 1);
		comment.append(" *"); //$NON-NLS-1$
		newLine(comment);
		indent(comment, 1);
		comment.append(" * @abatorgenerated "); //$NON-NLS-1$
		comment.append(new Date());
		newLine(comment);
		indent(comment, 1);
		comment.append(" */"); //$NON-NLS-1$
		
		return comment.toString();
	}
	
	public String getSetterMethodComment(FullyQualifiedTable table, ColumnDefinition columnDefinition) {
		StringBuffer comment = new StringBuffer();
		
		indent(comment, 1);
		comment.append("/**"); //$NON-NLS-1$
		newLine(comment);
		indent(comment, 1);
		comment.append(" * This method was generated by Abator for iBATIS.");
		newLine(comment);
		indent(comment, 1);
		comment.append(" * This method sets the value of the database column ");
		comment.append(table.getFullyQualifiedTableName());
		comment.append('.');
		comment.append(columnDefinition.getColumnName());
		newLine(comment);
		indent(comment, 1);
		comment.append(" *"); //$NON-NLS-1$
		newLine(comment);
		indent(comment, 1);
		comment.append(" * @param ");
		comment.append(columnDefinition.getJavaProperty());
		comment.append(" the value for ");
		comment.append(table.getFullyQualifiedTableName());
		comment.append('.');
		comment.append(columnDefinition.getColumnName());
		newLine(comment);
		indent(comment, 1);
		comment.append(" *"); //$NON-NLS-1$
		newLine(comment);
		indent(comment, 1);
		comment.append(" * @abatorgenerated "); //$NON-NLS-1$
		comment.append(new Date());
		newLine(comment);
		indent(comment, 1);
		comment.append(" */"); //$NON-NLS-1$
		
		return comment.toString();
	}
	
    // TODO - Write better Javadoc for general methods (include return, param and throws)
	public String getMethodComment(FullyQualifiedTable table) {
		StringBuffer comment = new StringBuffer();
		
		indent(comment, 1);
		comment.append("/**"); //$NON-NLS-1$
		newLine(comment);
		indent(comment, 1);
		comment.append(" * This method was generated by Abator for iBATIS.");
		newLine(comment);
		indent(comment, 1);
		comment.append(" * This method corresponds to the database table ");
		comment.append(table.getFullyQualifiedTableName());
		newLine(comment);
		indent(comment, 1);
		comment.append(" *"); //$NON-NLS-1$
		newLine(comment);
		indent(comment, 1);
		comment.append(" * @abatorgenerated "); //$NON-NLS-1$
		comment.append(new Date());
		newLine(comment);
		indent(comment, 1);
		comment.append(" */"); //$NON-NLS-1$
		
		return comment.toString();
	}
}
