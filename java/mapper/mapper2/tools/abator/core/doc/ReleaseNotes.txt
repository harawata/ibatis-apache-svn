-------------------------------------------------------------------------------
Version 0.7.0: ??
1. Major refactoring of code generators to use new DOM classes.  This makes
   adding and extending code generators much easier.
2. Added a new code generator that takes advantage of iBATIS' new support for
   nested iterate tags.
3. Added another new code generator that takes advantage of iBATIS' new
   support for nested iterate tags, and builds code that uses many JSE 5.0
   features including generic types, annotations, and enums.
4. Added support for "alias" on table configuration
5. Fixed the XML file merger so that extraneous blank lines in an XML merge
   are removed
6. Major overhaul of the documentation
7. (??) Added support for generating  objects from a query

-------------------------------------------------------------------------------
Version 0.6.5:
1. Added support for specifying rootClass for the model objects and
   rootInterface for the DAO interface.  To use, specify the "rootClass"
   optional property on the <javaModelGenerator> element, or the
   "rootInterface" optional property on the <daoGenerator> element.
   
   For example:
     <javaModelGenerator ... >
       <property name="rootClass" value="com.somedomain.SomeClass" />
     </javaModelGenerator>
   
     <daoGenerator ... >
       <property name="rootInterface" value="com.somedomain.SomeInterface" />
     </daoGenerator>
     
   Note that Abator uses these values "as is" - no checking is done to 
   validate their existance or validity.
   
2. Refactored code generation rules and added better documentation for
   the rules (see new org.apache.ibatis.abator.internal.rules package)
3. Ensure that property names are valid for iBATIS even if the user
   specifies "useActualColumnNames"
4. Added JDBC types for DATE and TIME fields to the mapping properties
   in the by example where clause fragment
5. Externalized all message strings
6. Abator will now survive if the JDBC driver does not support the
   getPrimaryKeys() function - but with reduced function

-------------------------------------------------------------------------------
Version 0.6.1:
1. Added support for running Abator from the command line
2. Fixed bug: NPE when <generatedKey> specifies an unknown column
3. Fixed bug: getExampleParms method in generated DAO can grow so enormous
   that it can't be compiled.  The fix is to break it into smaller methods.
4. Implemented an "iBATIS-like" Ant build

-------------------------------------------------------------------------------
Version 0.6.0:
1. Restructured as a standalone JAR file with no Eclipse dependencies
2. Added an Ant task
3. Added support for wrapping primitive data types in the "by example" methods
4. Removed dependency on JDOM
5. Greatly improved extensibility of the default code generators
6. Added support for disovering the case sensitivity of the database in regard
   to table names.

-------------------------------------------------------------------------------
Version 0.5.0:

Initial Release
