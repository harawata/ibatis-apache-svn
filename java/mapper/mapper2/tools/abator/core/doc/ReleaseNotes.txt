-------------------------------------------------------------------------------
Version 1.0.1:
Bugs - 
1. corner case where the new "by example" methods fail if a criteria
   class has been added to the list, but there are no criteria set
2. trimStrings on JavaModelGenerator not working

Enhancements - 
1. IBATIS-348 - escape column names with $ or #, and ignore special characters
   for generated Java properties by default
2. Add "clear" method to generated example classes in the Java2/Java5
   generator sets
3. Add support for "ignoreQualifiersAtRuntime" and "runtimeTableName" on
   the <table> configuration
4. Added support for persisting a configuration to XML - this to enable
   a graphical editor in the future
5. Add afterXXXGenerationHook() methods in all generators to enable adding
   extra Java code or XML elements to any generated object.  Will make it
   easier to create customized generators
6. Added SYBASE database dialect for generated keys

-------------------------------------------------------------------------------
Version 1.0.0:
1. Major refactoring of code generators to use new DOM classes.  This makes
   adding and extending code generators much easier.
2. Added a new set of code generators that take advantage of iBATIS' new
   support for nested iterate tags.
3. Added another new set of code generators that take advantage of iBATIS'
   new support for nested iterate tags, and builds code that uses many JSE 5.0
   features including parameterized types and annotations.
4. Added support for "alias" on table configuration
5. Fixed the XML file merger so that extraneous blank lines in an XML merge
   are removed
6. Major overhaul and improvement of the documentation
7. Added a typeHandler attribute to <columnOverride>
8. Added exampleMethodVisibility as a property for the DAO generator
9. Added methodNameCalculator as a property for the DAO generator
10. Added the ability to specify wildcards for schema and/or tableName in <table>
11. Added the ability to suppress type warning messages in a JSE 5.0 environment
12. Added the ability to specify different types of domain models
13. Added the "verbose" attribute to the Ant task
14. Allowed the Ant task to accept a property set
15. Added a <properties> element to the XML configuration

For full details, see the user's guide at doc\index.html in this
distribution - then look at the "What's New" page.

-------------------------------------------------------------------------------
Version 0.6.5:
1. Added support for specifying rootClass for the model objects and
   rootInterface for the DAO interface.  To use, specify the "rootClass"
   optional property on the <javaModelGenerator> element, or the
   "rootInterface" optional property on the <daoGenerator> element.
   
   For example:
     <javaModelGenerator ... >
       <property name="rootClass" value="com.somedomain.SomeClass" />
     </javaModelGenerator>
   
     <daoGenerator ... >
       <property name="rootInterface" value="com.somedomain.SomeInterface" />
     </daoGenerator>
     
   Note that Abator uses these values "as is" - no checking is done to 
   validate their existence or validity.
   
2. Refactored code generation rules and added better documentation for
   the rules (see new org.apache.ibatis.abator.internal.rules package)
3. Ensure that property names are valid for iBATIS even if the user
   specifies "useActualColumnNames"
4. Added JDBC types for DATE and TIME fields to the mapping properties
   in the by example where clause fragment
5. Externalized all message strings
6. Abator will now survive if the JDBC driver does not support the
   getPrimaryKeys() function - but with reduced function

-------------------------------------------------------------------------------
Version 0.6.1:
1. Added support for running Abator from the command line
2. Fixed bug: NPE when <generatedKey> specifies an unknown column
3. Fixed bug: getExampleParms method in generated DAO can grow so enormous
   that it can't be compiled.  The fix is to break it into smaller methods.
4. Implemented an "iBATIS-like" Ant build

-------------------------------------------------------------------------------
Version 0.6.0:
1. Restructured as a standalone JAR file with no Eclipse dependencies
2. Added an Ant task
3. Added support for wrapping primitive data types in the "by example" methods
4. Removed dependency on JDOM
5. Greatly improved extensibility of the default code generators
6. Added support for discovering the case sensitivity of the database in regard
   to table names.

-------------------------------------------------------------------------------
Version 0.5.0:

Initial Release - as an Eclipse plugin only
